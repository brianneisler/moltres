#!/usr/bin/env node

const program = require('commander')

const { loadDotEnv, processSpawn } = require('../index')

program
  .description('run a script')
  .option('-s, --stage [stage]', 'The stage to execute the script against')
  .parse(process.argv)

const exec = async ({ args, stage }) => {
  stage = stage || process.env.STAGE || 'local'
  const script = args[0]
  if (!script) {
    throw new Error('Must specify a path to a script as an argument')
  }
  const cwd = process.cwd()
  const env = await loadDotEnv(cwd, { cwd, stage })
  const spawn = processSpawn('bash', [script], {
    cwd,
    env: {
      ...process.env,
      ...env,
      STAGE: stage
    }
  })

  spawn.stdout.on('data', (data) => {
    // eslint-disable-next-line no-console
    console.log(data.toString())
  })

  spawn.stderr.on('data', (data) => {
    // eslint-disable-next-line no-console
    console.error(data.toString())
  })

  return new Promise((resolve, reject) => {
    spawn.on('error', (error) => {
      reject(error)
    })

    spawn.on('close', (code) => {
      if (code !== 0) {
        return reject(`script exited with code ${code}`)
      }
      return resolve(code)
    })
  })
}

exec(program)
  .then(() => process.exit())
  .catch((error) => {
    // eslint-disable-next-line no-console
    console.error(error)
    process.exit(1)
  })
